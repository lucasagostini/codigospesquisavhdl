|mult_serial_32bits
mr[0] => reg_n_shifter:LO.D[0]
mr[1] => reg_n_shifter:LO.D[1]
mr[2] => reg_n_shifter:LO.D[2]
mr[3] => reg_n_shifter:LO.D[3]
mr[4] => reg_n_shifter:LO.D[4]
mr[5] => reg_n_shifter:LO.D[5]
mr[6] => reg_n_shifter:LO.D[6]
mr[7] => reg_n_shifter:LO.D[7]
mr[8] => reg_n_shifter:LO.D[8]
mr[9] => reg_n_shifter:LO.D[9]
mr[10] => reg_n_shifter:LO.D[10]
mr[11] => reg_n_shifter:LO.D[11]
mr[12] => reg_n_shifter:LO.D[12]
mr[13] => reg_n_shifter:LO.D[13]
mr[14] => reg_n_shifter:LO.D[14]
mr[15] => reg_n_shifter:LO.D[15]
mr[16] => reg_n_shifter:LO.D[16]
mr[17] => reg_n_shifter:LO.D[17]
mr[18] => reg_n_shifter:LO.D[18]
mr[19] => reg_n_shifter:LO.D[19]
mr[20] => reg_n_shifter:LO.D[20]
mr[21] => reg_n_shifter:LO.D[21]
mr[22] => reg_n_shifter:LO.D[22]
mr[23] => reg_n_shifter:LO.D[23]
mr[24] => reg_n_shifter:LO.D[24]
mr[25] => reg_n_shifter:LO.D[25]
mr[26] => reg_n_shifter:LO.D[26]
mr[27] => reg_n_shifter:LO.D[27]
mr[28] => reg_n_shifter:LO.D[28]
mr[29] => reg_n_shifter:LO.D[29]
mr[30] => reg_n_shifter:LO.D[30]
mr[31] => reg_n_shifter:LO.D[31]
md[0] => ula_in_a[0].DATAB
md[1] => ula_in_a[1].DATAB
md[2] => ula_in_a[2].DATAB
md[3] => ula_in_a[3].DATAB
md[4] => ula_in_a[4].DATAB
md[5] => ula_in_a[5].DATAB
md[6] => ula_in_a[6].DATAB
md[7] => ula_in_a[7].DATAB
md[8] => ula_in_a[8].DATAB
md[9] => ula_in_a[9].DATAB
md[10] => ula_in_a[10].DATAB
md[11] => ula_in_a[11].DATAB
md[12] => ula_in_a[12].DATAB
md[13] => ula_in_a[13].DATAB
md[14] => ula_in_a[14].DATAB
md[15] => ula_in_a[15].DATAB
md[16] => ula_in_a[16].DATAB
md[17] => ula_in_a[17].DATAB
md[18] => ula_in_a[18].DATAB
md[19] => ula_in_a[19].DATAB
md[20] => ula_in_a[20].DATAB
md[21] => ula_in_a[21].DATAB
md[22] => ula_in_a[22].DATAB
md[23] => ula_in_a[23].DATAB
md[24] => ula_in_a[24].DATAB
md[25] => ula_in_a[25].DATAB
md[26] => ula_in_a[26].DATAB
md[27] => ula_in_a[27].DATAB
md[28] => ula_in_a[28].DATAB
md[29] => ula_in_a[29].DATAB
md[30] => ula_in_a[30].DATAB
md[31] => ula_in_a[31].DATAB
clk => reg_n_shifter:HI.clk
clk => mux_sel.CLK
clk => reg_n_shifter:LO.clk
clk => mult_serial_32bits_fsm:FSM.clk
reset => reg_n_shifter:HI.reset
reset => mux_sel.ACLR
reset => reg_n_shifter:LO.reset
reset => mult_serial_32bits_fsm:FSM.reset
pp[0] <= reg_n_shifter:LO.Q[0]
pp[1] <= reg_n_shifter:LO.Q[1]
pp[2] <= reg_n_shifter:LO.Q[2]
pp[3] <= reg_n_shifter:LO.Q[3]
pp[4] <= reg_n_shifter:LO.Q[4]
pp[5] <= reg_n_shifter:LO.Q[5]
pp[6] <= reg_n_shifter:LO.Q[6]
pp[7] <= reg_n_shifter:LO.Q[7]
pp[8] <= reg_n_shifter:LO.Q[8]
pp[9] <= reg_n_shifter:LO.Q[9]
pp[10] <= reg_n_shifter:LO.Q[10]
pp[11] <= reg_n_shifter:LO.Q[11]
pp[12] <= reg_n_shifter:LO.Q[12]
pp[13] <= reg_n_shifter:LO.Q[13]
pp[14] <= reg_n_shifter:LO.Q[14]
pp[15] <= reg_n_shifter:LO.Q[15]
pp[16] <= reg_n_shifter:LO.Q[16]
pp[17] <= reg_n_shifter:LO.Q[17]
pp[18] <= reg_n_shifter:LO.Q[18]
pp[19] <= reg_n_shifter:LO.Q[19]
pp[20] <= reg_n_shifter:LO.Q[20]
pp[21] <= reg_n_shifter:LO.Q[21]
pp[22] <= reg_n_shifter:LO.Q[22]
pp[23] <= reg_n_shifter:LO.Q[23]
pp[24] <= reg_n_shifter:LO.Q[24]
pp[25] <= reg_n_shifter:LO.Q[25]
pp[26] <= reg_n_shifter:LO.Q[26]
pp[27] <= reg_n_shifter:LO.Q[27]
pp[28] <= reg_n_shifter:LO.Q[28]
pp[29] <= reg_n_shifter:LO.Q[29]
pp[30] <= reg_n_shifter:LO.Q[30]
pp[31] <= reg_n_shifter:LO.Q[31]
pp[32] <= reg_n_shifter:HI.Q[0]
pp[33] <= reg_n_shifter:HI.Q[1]
pp[34] <= reg_n_shifter:HI.Q[2]
pp[35] <= reg_n_shifter:HI.Q[3]
pp[36] <= reg_n_shifter:HI.Q[4]
pp[37] <= reg_n_shifter:HI.Q[5]
pp[38] <= reg_n_shifter:HI.Q[6]
pp[39] <= reg_n_shifter:HI.Q[7]
pp[40] <= reg_n_shifter:HI.Q[8]
pp[41] <= reg_n_shifter:HI.Q[9]
pp[42] <= reg_n_shifter:HI.Q[10]
pp[43] <= reg_n_shifter:HI.Q[11]
pp[44] <= reg_n_shifter:HI.Q[12]
pp[45] <= reg_n_shifter:HI.Q[13]
pp[46] <= reg_n_shifter:HI.Q[14]
pp[47] <= reg_n_shifter:HI.Q[15]
pp[48] <= reg_n_shifter:HI.Q[16]
pp[49] <= reg_n_shifter:HI.Q[17]
pp[50] <= reg_n_shifter:HI.Q[18]
pp[51] <= reg_n_shifter:HI.Q[19]
pp[52] <= reg_n_shifter:HI.Q[20]
pp[53] <= reg_n_shifter:HI.Q[21]
pp[54] <= reg_n_shifter:HI.Q[22]
pp[55] <= reg_n_shifter:HI.Q[23]
pp[56] <= reg_n_shifter:HI.Q[24]
pp[57] <= reg_n_shifter:HI.Q[25]
pp[58] <= reg_n_shifter:HI.Q[26]
pp[59] <= reg_n_shifter:HI.Q[27]
pp[60] <= reg_n_shifter:HI.Q[28]
pp[61] <= reg_n_shifter:HI.Q[29]
pp[62] <= reg_n_shifter:HI.Q[30]
pp[63] <= reg_n_shifter:HI.Q[31]


|mult_serial_32bits|reg_n_shifter:HI
D[0] => internal_Q.DATAA
D[1] => internal_Q.DATAA
D[2] => internal_Q.DATAA
D[3] => internal_Q.DATAA
D[4] => internal_Q.DATAA
D[5] => internal_Q.DATAA
D[6] => internal_Q.DATAA
D[7] => internal_Q.DATAA
D[8] => internal_Q.DATAA
D[9] => internal_Q.DATAA
D[10] => internal_Q.DATAA
D[11] => internal_Q.DATAA
D[12] => internal_Q.DATAA
D[13] => internal_Q.DATAA
D[14] => internal_Q.DATAA
D[15] => internal_Q.DATAA
D[16] => internal_Q.DATAA
D[17] => internal_Q.DATAA
D[18] => internal_Q.DATAA
D[19] => internal_Q.DATAA
D[20] => internal_Q.DATAA
D[21] => internal_Q.DATAA
D[22] => internal_Q.DATAA
D[23] => internal_Q.DATAA
D[24] => internal_Q.DATAA
D[25] => internal_Q.DATAA
D[26] => internal_Q.DATAA
D[27] => internal_Q.DATAA
D[28] => internal_Q.DATAA
D[29] => internal_Q.DATAA
D[30] => internal_Q.DATAA
D[31] => internal_Q.DATAA
clk => bout~reg0.CLK
clk => internal_Q[0].CLK
clk => internal_Q[1].CLK
clk => internal_Q[2].CLK
clk => internal_Q[3].CLK
clk => internal_Q[4].CLK
clk => internal_Q[5].CLK
clk => internal_Q[6].CLK
clk => internal_Q[7].CLK
clk => internal_Q[8].CLK
clk => internal_Q[9].CLK
clk => internal_Q[10].CLK
clk => internal_Q[11].CLK
clk => internal_Q[12].CLK
clk => internal_Q[13].CLK
clk => internal_Q[14].CLK
clk => internal_Q[15].CLK
clk => internal_Q[16].CLK
clk => internal_Q[17].CLK
clk => internal_Q[18].CLK
clk => internal_Q[19].CLK
clk => internal_Q[20].CLK
clk => internal_Q[21].CLK
clk => internal_Q[22].CLK
clk => internal_Q[23].CLK
clk => internal_Q[24].CLK
clk => internal_Q[25].CLK
clk => internal_Q[26].CLK
clk => internal_Q[27].CLK
clk => internal_Q[28].CLK
clk => internal_Q[29].CLK
clk => internal_Q[30].CLK
clk => internal_Q[31].CLK
reset => internal_Q[0].ACLR
reset => internal_Q[1].ACLR
reset => internal_Q[2].ACLR
reset => internal_Q[3].ACLR
reset => internal_Q[4].ACLR
reset => internal_Q[5].ACLR
reset => internal_Q[6].ACLR
reset => internal_Q[7].ACLR
reset => internal_Q[8].ACLR
reset => internal_Q[9].ACLR
reset => internal_Q[10].ACLR
reset => internal_Q[11].ACLR
reset => internal_Q[12].ACLR
reset => internal_Q[13].ACLR
reset => internal_Q[14].ACLR
reset => internal_Q[15].ACLR
reset => internal_Q[16].ACLR
reset => internal_Q[17].ACLR
reset => internal_Q[18].ACLR
reset => internal_Q[19].ACLR
reset => internal_Q[20].ACLR
reset => internal_Q[21].ACLR
reset => internal_Q[22].ACLR
reset => internal_Q[23].ACLR
reset => internal_Q[24].ACLR
reset => internal_Q[25].ACLR
reset => internal_Q[26].ACLR
reset => internal_Q[27].ACLR
reset => internal_Q[28].ACLR
reset => internal_Q[29].ACLR
reset => internal_Q[30].ACLR
reset => internal_Q[31].ACLR
reset => bout~reg0.ENA
enable => bout.OUTPUTSELECT
enable => internal_Q[0].ENA
enable => internal_Q[1].ENA
enable => internal_Q[2].ENA
enable => internal_Q[3].ENA
enable => internal_Q[4].ENA
enable => internal_Q[5].ENA
enable => internal_Q[6].ENA
enable => internal_Q[7].ENA
enable => internal_Q[8].ENA
enable => internal_Q[9].ENA
enable => internal_Q[10].ENA
enable => internal_Q[11].ENA
enable => internal_Q[12].ENA
enable => internal_Q[13].ENA
enable => internal_Q[14].ENA
enable => internal_Q[15].ENA
enable => internal_Q[16].ENA
enable => internal_Q[17].ENA
enable => internal_Q[18].ENA
enable => internal_Q[19].ENA
enable => internal_Q[20].ENA
enable => internal_Q[21].ENA
enable => internal_Q[22].ENA
enable => internal_Q[23].ENA
enable => internal_Q[24].ENA
enable => internal_Q[25].ENA
enable => internal_Q[26].ENA
enable => internal_Q[27].ENA
enable => internal_Q[28].ENA
enable => internal_Q[29].ENA
enable => internal_Q[30].ENA
enable => internal_Q[31].ENA
shift => internal_Q.OUTPUTSELECT
shift => internal_Q.OUTPUTSELECT
shift => internal_Q.OUTPUTSELECT
shift => internal_Q.OUTPUTSELECT
shift => internal_Q.OUTPUTSELECT
shift => internal_Q.OUTPUTSELECT
shift => internal_Q.OUTPUTSELECT
shift => internal_Q.OUTPUTSELECT
shift => internal_Q.OUTPUTSELECT
shift => internal_Q.OUTPUTSELECT
shift => internal_Q.OUTPUTSELECT
shift => internal_Q.OUTPUTSELECT
shift => internal_Q.OUTPUTSELECT
shift => internal_Q.OUTPUTSELECT
shift => internal_Q.OUTPUTSELECT
shift => internal_Q.OUTPUTSELECT
shift => internal_Q.OUTPUTSELECT
shift => internal_Q.OUTPUTSELECT
shift => internal_Q.OUTPUTSELECT
shift => internal_Q.OUTPUTSELECT
shift => internal_Q.OUTPUTSELECT
shift => internal_Q.OUTPUTSELECT
shift => internal_Q.OUTPUTSELECT
shift => internal_Q.OUTPUTSELECT
shift => internal_Q.OUTPUTSELECT
shift => internal_Q.OUTPUTSELECT
shift => internal_Q.OUTPUTSELECT
shift => internal_Q.OUTPUTSELECT
shift => internal_Q.OUTPUTSELECT
shift => internal_Q.OUTPUTSELECT
shift => internal_Q.OUTPUTSELECT
shift => internal_Q.OUTPUTSELECT
shift => bout.OUTPUTSELECT
bin => internal_Q.DATAB
bout <= bout~reg0.DB_MAX_OUTPUT_PORT_TYPE
Q[0] <= internal_Q[0].DB_MAX_OUTPUT_PORT_TYPE
Q[1] <= internal_Q[1].DB_MAX_OUTPUT_PORT_TYPE
Q[2] <= internal_Q[2].DB_MAX_OUTPUT_PORT_TYPE
Q[3] <= internal_Q[3].DB_MAX_OUTPUT_PORT_TYPE
Q[4] <= internal_Q[4].DB_MAX_OUTPUT_PORT_TYPE
Q[5] <= internal_Q[5].DB_MAX_OUTPUT_PORT_TYPE
Q[6] <= internal_Q[6].DB_MAX_OUTPUT_PORT_TYPE
Q[7] <= internal_Q[7].DB_MAX_OUTPUT_PORT_TYPE
Q[8] <= internal_Q[8].DB_MAX_OUTPUT_PORT_TYPE
Q[9] <= internal_Q[9].DB_MAX_OUTPUT_PORT_TYPE
Q[10] <= internal_Q[10].DB_MAX_OUTPUT_PORT_TYPE
Q[11] <= internal_Q[11].DB_MAX_OUTPUT_PORT_TYPE
Q[12] <= internal_Q[12].DB_MAX_OUTPUT_PORT_TYPE
Q[13] <= internal_Q[13].DB_MAX_OUTPUT_PORT_TYPE
Q[14] <= internal_Q[14].DB_MAX_OUTPUT_PORT_TYPE
Q[15] <= internal_Q[15].DB_MAX_OUTPUT_PORT_TYPE
Q[16] <= internal_Q[16].DB_MAX_OUTPUT_PORT_TYPE
Q[17] <= internal_Q[17].DB_MAX_OUTPUT_PORT_TYPE
Q[18] <= internal_Q[18].DB_MAX_OUTPUT_PORT_TYPE
Q[19] <= internal_Q[19].DB_MAX_OUTPUT_PORT_TYPE
Q[20] <= internal_Q[20].DB_MAX_OUTPUT_PORT_TYPE
Q[21] <= internal_Q[21].DB_MAX_OUTPUT_PORT_TYPE
Q[22] <= internal_Q[22].DB_MAX_OUTPUT_PORT_TYPE
Q[23] <= internal_Q[23].DB_MAX_OUTPUT_PORT_TYPE
Q[24] <= internal_Q[24].DB_MAX_OUTPUT_PORT_TYPE
Q[25] <= internal_Q[25].DB_MAX_OUTPUT_PORT_TYPE
Q[26] <= internal_Q[26].DB_MAX_OUTPUT_PORT_TYPE
Q[27] <= internal_Q[27].DB_MAX_OUTPUT_PORT_TYPE
Q[28] <= internal_Q[28].DB_MAX_OUTPUT_PORT_TYPE
Q[29] <= internal_Q[29].DB_MAX_OUTPUT_PORT_TYPE
Q[30] <= internal_Q[30].DB_MAX_OUTPUT_PORT_TYPE
Q[31] <= internal_Q[31].DB_MAX_OUTPUT_PORT_TYPE


|mult_serial_32bits|reg_n_shifter:LO
D[0] => internal_Q.DATAA
D[1] => internal_Q.DATAA
D[2] => internal_Q.DATAA
D[3] => internal_Q.DATAA
D[4] => internal_Q.DATAA
D[5] => internal_Q.DATAA
D[6] => internal_Q.DATAA
D[7] => internal_Q.DATAA
D[8] => internal_Q.DATAA
D[9] => internal_Q.DATAA
D[10] => internal_Q.DATAA
D[11] => internal_Q.DATAA
D[12] => internal_Q.DATAA
D[13] => internal_Q.DATAA
D[14] => internal_Q.DATAA
D[15] => internal_Q.DATAA
D[16] => internal_Q.DATAA
D[17] => internal_Q.DATAA
D[18] => internal_Q.DATAA
D[19] => internal_Q.DATAA
D[20] => internal_Q.DATAA
D[21] => internal_Q.DATAA
D[22] => internal_Q.DATAA
D[23] => internal_Q.DATAA
D[24] => internal_Q.DATAA
D[25] => internal_Q.DATAA
D[26] => internal_Q.DATAA
D[27] => internal_Q.DATAA
D[28] => internal_Q.DATAA
D[29] => internal_Q.DATAA
D[30] => internal_Q.DATAA
D[31] => internal_Q.DATAA
clk => bout~reg0.CLK
clk => internal_Q[0].CLK
clk => internal_Q[1].CLK
clk => internal_Q[2].CLK
clk => internal_Q[3].CLK
clk => internal_Q[4].CLK
clk => internal_Q[5].CLK
clk => internal_Q[6].CLK
clk => internal_Q[7].CLK
clk => internal_Q[8].CLK
clk => internal_Q[9].CLK
clk => internal_Q[10].CLK
clk => internal_Q[11].CLK
clk => internal_Q[12].CLK
clk => internal_Q[13].CLK
clk => internal_Q[14].CLK
clk => internal_Q[15].CLK
clk => internal_Q[16].CLK
clk => internal_Q[17].CLK
clk => internal_Q[18].CLK
clk => internal_Q[19].CLK
clk => internal_Q[20].CLK
clk => internal_Q[21].CLK
clk => internal_Q[22].CLK
clk => internal_Q[23].CLK
clk => internal_Q[24].CLK
clk => internal_Q[25].CLK
clk => internal_Q[26].CLK
clk => internal_Q[27].CLK
clk => internal_Q[28].CLK
clk => internal_Q[29].CLK
clk => internal_Q[30].CLK
clk => internal_Q[31].CLK
reset => internal_Q[0].ACLR
reset => internal_Q[1].ACLR
reset => internal_Q[2].ACLR
reset => internal_Q[3].ACLR
reset => internal_Q[4].ACLR
reset => internal_Q[5].ACLR
reset => internal_Q[6].ACLR
reset => internal_Q[7].ACLR
reset => internal_Q[8].ACLR
reset => internal_Q[9].ACLR
reset => internal_Q[10].ACLR
reset => internal_Q[11].ACLR
reset => internal_Q[12].ACLR
reset => internal_Q[13].ACLR
reset => internal_Q[14].ACLR
reset => internal_Q[15].ACLR
reset => internal_Q[16].ACLR
reset => internal_Q[17].ACLR
reset => internal_Q[18].ACLR
reset => internal_Q[19].ACLR
reset => internal_Q[20].ACLR
reset => internal_Q[21].ACLR
reset => internal_Q[22].ACLR
reset => internal_Q[23].ACLR
reset => internal_Q[24].ACLR
reset => internal_Q[25].ACLR
reset => internal_Q[26].ACLR
reset => internal_Q[27].ACLR
reset => internal_Q[28].ACLR
reset => internal_Q[29].ACLR
reset => internal_Q[30].ACLR
reset => internal_Q[31].ACLR
reset => bout~reg0.ENA
enable => bout.OUTPUTSELECT
enable => internal_Q[0].ENA
enable => internal_Q[1].ENA
enable => internal_Q[2].ENA
enable => internal_Q[3].ENA
enable => internal_Q[4].ENA
enable => internal_Q[5].ENA
enable => internal_Q[6].ENA
enable => internal_Q[7].ENA
enable => internal_Q[8].ENA
enable => internal_Q[9].ENA
enable => internal_Q[10].ENA
enable => internal_Q[11].ENA
enable => internal_Q[12].ENA
enable => internal_Q[13].ENA
enable => internal_Q[14].ENA
enable => internal_Q[15].ENA
enable => internal_Q[16].ENA
enable => internal_Q[17].ENA
enable => internal_Q[18].ENA
enable => internal_Q[19].ENA
enable => internal_Q[20].ENA
enable => internal_Q[21].ENA
enable => internal_Q[22].ENA
enable => internal_Q[23].ENA
enable => internal_Q[24].ENA
enable => internal_Q[25].ENA
enable => internal_Q[26].ENA
enable => internal_Q[27].ENA
enable => internal_Q[28].ENA
enable => internal_Q[29].ENA
enable => internal_Q[30].ENA
enable => internal_Q[31].ENA
shift => internal_Q.OUTPUTSELECT
shift => internal_Q.OUTPUTSELECT
shift => internal_Q.OUTPUTSELECT
shift => internal_Q.OUTPUTSELECT
shift => internal_Q.OUTPUTSELECT
shift => internal_Q.OUTPUTSELECT
shift => internal_Q.OUTPUTSELECT
shift => internal_Q.OUTPUTSELECT
shift => internal_Q.OUTPUTSELECT
shift => internal_Q.OUTPUTSELECT
shift => internal_Q.OUTPUTSELECT
shift => internal_Q.OUTPUTSELECT
shift => internal_Q.OUTPUTSELECT
shift => internal_Q.OUTPUTSELECT
shift => internal_Q.OUTPUTSELECT
shift => internal_Q.OUTPUTSELECT
shift => internal_Q.OUTPUTSELECT
shift => internal_Q.OUTPUTSELECT
shift => internal_Q.OUTPUTSELECT
shift => internal_Q.OUTPUTSELECT
shift => internal_Q.OUTPUTSELECT
shift => internal_Q.OUTPUTSELECT
shift => internal_Q.OUTPUTSELECT
shift => internal_Q.OUTPUTSELECT
shift => internal_Q.OUTPUTSELECT
shift => internal_Q.OUTPUTSELECT
shift => internal_Q.OUTPUTSELECT
shift => internal_Q.OUTPUTSELECT
shift => internal_Q.OUTPUTSELECT
shift => internal_Q.OUTPUTSELECT
shift => internal_Q.OUTPUTSELECT
shift => internal_Q.OUTPUTSELECT
shift => bout.OUTPUTSELECT
bin => internal_Q.DATAB
bout <= bout~reg0.DB_MAX_OUTPUT_PORT_TYPE
Q[0] <= internal_Q[0].DB_MAX_OUTPUT_PORT_TYPE
Q[1] <= internal_Q[1].DB_MAX_OUTPUT_PORT_TYPE
Q[2] <= internal_Q[2].DB_MAX_OUTPUT_PORT_TYPE
Q[3] <= internal_Q[3].DB_MAX_OUTPUT_PORT_TYPE
Q[4] <= internal_Q[4].DB_MAX_OUTPUT_PORT_TYPE
Q[5] <= internal_Q[5].DB_MAX_OUTPUT_PORT_TYPE
Q[6] <= internal_Q[6].DB_MAX_OUTPUT_PORT_TYPE
Q[7] <= internal_Q[7].DB_MAX_OUTPUT_PORT_TYPE
Q[8] <= internal_Q[8].DB_MAX_OUTPUT_PORT_TYPE
Q[9] <= internal_Q[9].DB_MAX_OUTPUT_PORT_TYPE
Q[10] <= internal_Q[10].DB_MAX_OUTPUT_PORT_TYPE
Q[11] <= internal_Q[11].DB_MAX_OUTPUT_PORT_TYPE
Q[12] <= internal_Q[12].DB_MAX_OUTPUT_PORT_TYPE
Q[13] <= internal_Q[13].DB_MAX_OUTPUT_PORT_TYPE
Q[14] <= internal_Q[14].DB_MAX_OUTPUT_PORT_TYPE
Q[15] <= internal_Q[15].DB_MAX_OUTPUT_PORT_TYPE
Q[16] <= internal_Q[16].DB_MAX_OUTPUT_PORT_TYPE
Q[17] <= internal_Q[17].DB_MAX_OUTPUT_PORT_TYPE
Q[18] <= internal_Q[18].DB_MAX_OUTPUT_PORT_TYPE
Q[19] <= internal_Q[19].DB_MAX_OUTPUT_PORT_TYPE
Q[20] <= internal_Q[20].DB_MAX_OUTPUT_PORT_TYPE
Q[21] <= internal_Q[21].DB_MAX_OUTPUT_PORT_TYPE
Q[22] <= internal_Q[22].DB_MAX_OUTPUT_PORT_TYPE
Q[23] <= internal_Q[23].DB_MAX_OUTPUT_PORT_TYPE
Q[24] <= internal_Q[24].DB_MAX_OUTPUT_PORT_TYPE
Q[25] <= internal_Q[25].DB_MAX_OUTPUT_PORT_TYPE
Q[26] <= internal_Q[26].DB_MAX_OUTPUT_PORT_TYPE
Q[27] <= internal_Q[27].DB_MAX_OUTPUT_PORT_TYPE
Q[28] <= internal_Q[28].DB_MAX_OUTPUT_PORT_TYPE
Q[29] <= internal_Q[29].DB_MAX_OUTPUT_PORT_TYPE
Q[30] <= internal_Q[30].DB_MAX_OUTPUT_PORT_TYPE
Q[31] <= internal_Q[31].DB_MAX_OUTPUT_PORT_TYPE


|mult_serial_32bits|mult_serial_32bits_fsm:FSM
clk => curr_state~5.DATAIN
reset => process_1.IN1
reset => curr_state~7.DATAIN
start => is_active.CLK
enableh <= enableh$latch.DB_MAX_OUTPUT_PORT_TYPE
enablel <= enablel$latch.DB_MAX_OUTPUT_PORT_TYPE
shifth <= shifth$latch.DB_MAX_OUTPUT_PORT_TYPE
shiftl <= shiftl$latch.DB_MAX_OUTPUT_PORT_TYPE
ready <= is_active.DB_MAX_OUTPUT_PORT_TYPE


